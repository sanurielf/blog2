<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Isaac Bythewood</title><link href="http://isaacbythewood.com/" rel="alternate"></link><link href="http://isaacbythewood.com/feeds/all.atom.xml" rel="self"></link><id>http://isaacbythewood.com/</id><updated>2013-03-04T00:00:00+01:00</updated><entry><title>Pinry has moved!</title><link href="http://isaacbythewood.com/2013/03/04/pinry-has-moved/" rel="alternate"></link><updated>2013-03-04T00:00:00+01:00</updated><author><name>Isaac Bythewood</name></author><id>tag:isaacbythewood.com,2013-03-04:2013/03/04/pinry-has-moved/</id><summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bitbucket.org/pinry/pinry"&gt;Pinry on BitBucket (Primary)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pinry/pinry"&gt;Pinry on GitHub (Mirror)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I would like to give a huge thank you to everyone for your support of Pinry and
Pinry will continue to grow because of it. Pinry's official v1.0.0 release is
coming soon/already out with many more features to come. Our current goal is a
hosted service for Pinry so that you don't have to setup Pinry on your own
server making it incredibly easy to get started.&lt;/p&gt;
&lt;p&gt;I never plan to forget that Pinry was built as an open platform, our hosted
setup may contain a few more features as the simple benefit of us hosting it but
the core of Pinry will always remain open-source, free, and continuously updated
because it's exactly what I use in Pinry's hosted environment. There will be
many great import and export features too so that if someone decides they want
to move between the platforms it's easy and simple to do. The Pinry Hosted will
cost a fee but it will be as close to "pay for what you use" as possible, I'm
not trying to get rich off Pinry I just want to provide a great product, however
I also don't want it to be a drain on my savings.&lt;/p&gt;
&lt;p&gt;If you're interested in finding out more I'll be releasing
&lt;a href="http://getpinry.com/"&gt;getpinry.com&lt;/a&gt; in the coming weeks so please check there
for more information.&lt;/p&gt;
&lt;p&gt;Again, thank you everyone for your support!&lt;/p&gt;</summary></entry><entry><title>Getting started with Pelican on GitHub.</title><link href="http://isaacbythewood.com/2012/06/14/getting-started-with-pelican-on-github/" rel="alternate"></link><updated>2012-06-14T00:00:00+02:00</updated><author><name>Isaac Bythewood</name></author><id>tag:isaacbythewood.com,2012-06-14:2012/06/14/getting-started-with-pelican-on-github/</id><summary type="html">&lt;p&gt;Pelican is a static site generator built on Python, here's a simple how-to on
getting your website started with a custom theme and free hosting on GitHub
Pages.&lt;/p&gt;
&lt;h2&gt;What You'll Need&lt;/h2&gt;
&lt;p&gt;All of the following are the base requirements for using Pelican, I'm not going
to go into how to get these but you can probably figure it out on your own/via
Google if you don't already have them.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;virtualenv (Python package)&lt;/li&gt;
&lt;li&gt;pip (Python Package)&lt;/li&gt;
&lt;li&gt;make (Depends on your OS, on Ubuntu it's apart of build-essentials package)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Quickstart&lt;/h2&gt;
&lt;p&gt;Pelican has an okay quickstart with it's &lt;code&gt;pelican-quickstart&lt;/code&gt; command but this
doesn't provide many essential settings or setup a custom theme. The best way to
quickstart is to pull my repo:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;clone&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;github&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;overshard&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;isaacbythewood&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;git&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You now have a fully working Pelican project with many sane settings that you
can view and modify in the &lt;code&gt;pelicanconf.py&lt;/code&gt; and &lt;code&gt;publishconf.py&lt;/code&gt; files. There
are some settings you'll need to change like &lt;code&gt;AUTHOR&lt;/code&gt;, &lt;code&gt;SITEURL&lt;/code&gt;, and
&lt;code&gt;SITENAME&lt;/code&gt;. Peruse my settings and change as needed.&lt;/p&gt;
&lt;p&gt;You'll then want to setup your &lt;code&gt;virtualenv&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;virtualenv&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;activate&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="n"&gt;requirements&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will install everything you need work with Pelican. Remember, every time
you wish to work on your project in the future be sure to run
&lt;code&gt;source bin/activate&lt;/code&gt; from inside your project's folder, this enables the
virtual environment we just setup here.&lt;/p&gt;
&lt;p&gt;To generate/run your project you can use make, I recommend just typing &lt;code&gt;make&lt;/code&gt;
and you'll see an output of accepted commands, the core commands you'll use are
&lt;code&gt;make devserver&lt;/code&gt;, &lt;code&gt;make html&lt;/code&gt;, &lt;code&gt;make publish&lt;/code&gt;, and &lt;code&gt;make github&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To see an example of your site type &lt;code&gt;make html&lt;/code&gt; then &lt;code&gt;make devserver&lt;/code&gt; and you
can view your site in your browser by visiting
&lt;a href="http://localhost:8000/"&gt;http://localhost:8000/&lt;/a&gt;. Of course right now it will
look exactly like my site but that's simply part of changing the theme.&lt;/p&gt;
&lt;h2&gt;Content&lt;/h2&gt;
&lt;p&gt;All of the content on your website will be put into the content folder, images
for posts go in &lt;code&gt;content/images&lt;/code&gt; extras such as &lt;code&gt;favicon.ico&lt;/code&gt; go into
&lt;code&gt;content/extra&lt;/code&gt; and your posts mostly just go directly into &lt;code&gt;content&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Something you need to change before you push to GitHub is &lt;code&gt;extra/CNAME&lt;/code&gt;. Either
delete it entirely or change it to your own domain name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Be sure that if you remove or add extras edit &lt;code&gt;pelicanconf.py&lt;/code&gt; to
reflect the files removed/added:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;FILES_TO_COPY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;extra/favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;extra/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I don't want to get to in depth about writing posts, just see how I do it as an
example and go from there. One tip is to link to a file or another post in your
content use something like &lt;code&gt;|filename|/images/some-post/file.type&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Theme&lt;/h2&gt;
&lt;p&gt;Everything for your theme goes in the &lt;code&gt;theme&lt;/code&gt; folder, static files in
&lt;code&gt;theme/static&lt;/code&gt; and templates into &lt;code&gt;theme/templates&lt;/code&gt;. Use my base templates
as an example or even better
&lt;a href="https://github.com/getpelican/pelican/tree/master/pelican/themes/notmyidea"&gt;use Pelicans&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To link to a static file from a template use
&lt;code&gt;{{ SITEURL }}/theme/static/folder/file.type&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For more information on variables passed to each pelican template see the
&lt;a href="http://docs.getpelican.com/en/3.1.1/themes.html#templates-and-variables"&gt;official Pelican documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Getting Everything On GitHub&lt;/h2&gt;
&lt;p&gt;Once you are happy with your content and theme be sure you create your own
&lt;a href="https://github.com/new"&gt;GitHub repository&lt;/a&gt;. If you cloned from my repo you'll
want to delete my origin &lt;code&gt;git remote rm origin&lt;/code&gt; and add yours which GitHub will
tell you how to do after you create your new repository. From there &lt;code&gt;git push&lt;/code&gt;
your code to your new repo but this doesn't make your site live. You'll need to
run the following every time you want to publish new changes to GitHub pages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;publish&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;make&lt;/span&gt; &lt;span class="n"&gt;github&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will create all your output files in a publishable form and then
automatically create and push your GitHub &lt;code&gt;gh-pages&lt;/code&gt; branch. You can then go
check your gh-pages online and in about 10 minutes it will be live. If it isn't
then try doing the above commands again to initiate another build on GitHub's
servers.&lt;/p&gt;
&lt;h2&gt;Final Note&lt;/h2&gt;
&lt;p&gt;I use Markdown as for all my posts but that doesn't mean you have to, Pelican
supports many different markups the other official one the documentation
describes is reStructuredText. To use a different markup simply put the type's
extension on your content post. ex. &lt;code&gt;content/2012-06-14-fancy-post.rst&lt;/code&gt; for
reStructuredText.&lt;/p&gt;</summary></entry><entry><title>Pinry, a self-hosted Pinterest.</title><link href="http://isaacbythewood.com/2012/04/25/pinry-a-self-hosted-pinterest/" rel="alternate"></link><updated>2012-04-25T00:00:00+02:00</updated><author><name>Isaac Bythewood</name></author><id>tag:isaacbythewood.com,2012-04-25:2012/04/25/pinry-a-self-hosted-pinterest/</id><summary type="html">&lt;p&gt;Deployable on any platform Pinry provides a great "private" Pinterest for you to
quickly pin stuff you love online. As usual you can find my code on
&lt;a href="https://github.com/overshard/pinry"&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pinry's home page" src="http://isaacbythewood.com/static/images/2012-04-25-pinry-a-self-hosted-pinterest/pinry.jpg" /&gt;&lt;/p&gt;</summary></entry></feed>